class Solution {
public:
    vector<int> decrypt(vector<int>& code, int k) {
        //BRUTE FORCE APPROACH 

        // int n = code.size();
        // vector<int> res(n,0);
        // if(k == 0){
        //     return res;
        // }
        // for(int i=0; i<n; i++){
        //     if(k>0){
        //         for(int j=i+1; j<i+k+1; j++){
        //             res[i] += code[j%n];
        //         }
        //     }
        //     else{
        //         for(int j= i - abs(k); j<i; j++){
        //             res[i] += code[(j+n)%n];
        //         }
        //     }
        // }
        // return res;

        //SLIDING WINDOW APPROACH

        int n = code.size();
        vector<int> res(n, 0);
        if(k == 0){
            return res;
        }
        int start = 1;
        int end = k;
        int sum = 0;
        if(k<0){
            start = n - abs(k);
            end = n - 1;
        }

        for(int i=start; i<=end; i++){
            sum += code[i];
        }

        for(int i=0; i<n; i++){
            res[i] = sum;
            sum -= code[start % n];
            sum += code[(end+1) % n];
            start++;
            end++;
        }
        return res;
    }
};
