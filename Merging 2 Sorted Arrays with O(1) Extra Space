/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <bits/stdc++.h>
using namespace std;
int next_gap(int gap){
    if(gap <= 1){
        return 0;
    }
    return (gap/2) + (gap%2);
}
void merge(int arr1[], int arr2[], int n, int m){
    int gap = n+m;
    gap = next_gap(gap);
    while(gap > 0){
        int i=0;
        while(i+gap < n){
            if(arr1[i] > arr1[i+gap]){
                swap(arr1[i], arr1[i+gap]);
            }
            i++;
        }
        int j = gap > n ? gap - n : 0;
        while(i < n && j < m){
            if(arr1[i] > arr2[j]){
                swap(arr1[i], arr2[j]);
            }
            i++;
            j++;
        }
        if(j<m){
            j = 0;
            while(j+gap < m){
                if(arr2[j] > arr2[j+gap]){
                    swap(arr2[j], arr2[j+gap]);
                }
                j++;
            }
        }
        gap = next_gap(gap);
    }
}
int main()
{
    int arr1[] = {3, 27, 38, 43};
    int arr2[] = {9, 10, 82};
    int n = 4;
    int m = 3;
    merge(arr1, arr2, n, m);
    cout << "First Array: " << endl;
    for(int i=0; i<n; i++){
        cout << arr1[i] << " ";
    }
    cout << endl;
    cout << "Second Array: " << endl;
    for(int i=0; i<m; i++){
        cout << arr2[i] << " ";
    }
    return 0;
}
